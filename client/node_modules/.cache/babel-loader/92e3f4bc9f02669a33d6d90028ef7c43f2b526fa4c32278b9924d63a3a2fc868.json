{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import authReducer from'../features/authSlice';import taskReducer from'../features/taskSlice';export const store=configureStore({reducer:{auth:authReducer,tasks:taskReducer},middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:false})});// Infer the RootState type","map":{"version":3,"names":["configureStore","authReducer","taskReducer","store","reducer","auth","tasks","middleware","getDefaultMiddleware","serializableCheck"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../features/authSlice';\nimport taskReducer from '../features/taskSlice';\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n        tasks: taskReducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: false,\n        }),\n});\n\n// Infer the RootState type\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAE/C,MAAO,MAAM,CAAAC,KAAK,CAAGH,cAAc,CAAC,CAChCI,OAAO,CAAE,CACLC,IAAI,CAAEJ,WAAW,CACjBK,KAAK,CAAEJ,WACX,CAAC,CACDK,UAAU,CAAGC,oBAAoB,EAC7BA,oBAAoB,CAAC,CACjBC,iBAAiB,CAAE,KACvB,CAAC,CACT,CAAC,CAAC,CAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}