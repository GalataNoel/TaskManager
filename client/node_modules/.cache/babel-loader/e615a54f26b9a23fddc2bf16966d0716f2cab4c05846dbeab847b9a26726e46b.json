{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditTaskDialog=_ref=>{let{open,task,onClose,onSave}=_ref;const[title,setTitle]=useState(task.title);const[description,setDescription]=useState(task.description);useEffect(()=>{setTitle(task.title);setDescription(task.description);},[task]);const handleSave=()=>{onSave(task.id,title,description);onClose();};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Edit Task\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Title\",type:\"text\",fullWidth:true,variant:\"outlined\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"Description\",type:\"text\",fullWidth:true,variant:\"outlined\",multiline:true,rows:4,value:description,onChange:e=>setDescription(e.target.value)})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSave,color:\"primary\",variant:\"contained\",children:\"Save\"})]})]});};export default EditTaskDialog;","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","jsx","_jsx","jsxs","_jsxs","EditTaskDialog","_ref","open","task","onClose","onSave","title","setTitle","description","setDescription","handleSave","id","fullWidth","maxWidth","children","autoFocus","margin","label","type","variant","value","onChange","e","target","multiline","rows","onClick","color"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/components/EditTaskDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@mui/material';\n\ninterface EditTaskDialogProps {\n    open: boolean;\n    task: { id: string; title: string; description: string };\n    onClose: () => void;\n    onSave: (id: string, title: string, description: string) => void;\n}\n\nconst EditTaskDialog: React.FC<EditTaskDialogProps> = ({ open, task, onClose, onSave }) => {\n    const [title, setTitle] = useState(task.title);\n    const [description, setDescription] = useState(task.description);\n\n    useEffect(() => {\n        setTitle(task.title);\n        setDescription(task.description);\n    }, [task]);\n\n    const handleSave = () => {\n        onSave(task.id, title, description);\n        onClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n            <DialogTitle>Edit Task</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default EditTaskDialog;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,WAAW,CAAEC,aAAa,CAAEC,aAAa,CAAEC,SAAS,CAAEC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASrG,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAqC,IAApC,CAAEC,IAAI,CAAEC,IAAI,CAAEC,OAAO,CAAEC,MAAO,CAAC,CAAAJ,IAAA,CAClF,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAACe,IAAI,CAACG,KAAK,CAAC,CAC9C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAACe,IAAI,CAACK,WAAW,CAAC,CAEhEnB,SAAS,CAAC,IAAM,CACZkB,QAAQ,CAACJ,IAAI,CAACG,KAAK,CAAC,CACpBG,cAAc,CAACN,IAAI,CAACK,WAAW,CAAC,CACpC,CAAC,CAAE,CAACL,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAO,UAAU,CAAGA,CAAA,GAAM,CACrBL,MAAM,CAACF,IAAI,CAACQ,EAAE,CAAEL,KAAK,CAAEE,WAAW,CAAC,CACnCJ,OAAO,CAAC,CAAC,CACb,CAAC,CAED,mBACIL,KAAA,CAACT,MAAM,EAACY,IAAI,CAAEA,IAAK,CAACE,OAAO,CAAEA,OAAQ,CAACQ,SAAS,MAACC,QAAQ,CAAC,IAAI,CAAAC,QAAA,eACzDjB,IAAA,CAACN,WAAW,EAAAuB,QAAA,CAAC,WAAS,CAAa,CAAC,cACpCf,KAAA,CAACP,aAAa,EAAAsB,QAAA,eACVjB,IAAA,CAACH,SAAS,EACNqB,SAAS,MACTC,MAAM,CAAC,OAAO,CACdC,KAAK,CAAC,OAAO,CACbC,IAAI,CAAC,MAAM,CACXN,SAAS,MACTO,OAAO,CAAC,UAAU,CAClBC,KAAK,CAAEd,KAAM,CACbe,QAAQ,CAAGC,CAAC,EAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,cACFvB,IAAA,CAACH,SAAS,EACNsB,MAAM,CAAC,OAAO,CACdC,KAAK,CAAC,aAAa,CACnBC,IAAI,CAAC,MAAM,CACXN,SAAS,MACTO,OAAO,CAAC,UAAU,CAClBK,SAAS,MACTC,IAAI,CAAE,CAAE,CACRL,KAAK,CAAEZ,WAAY,CACnBa,QAAQ,CAAGC,CAAC,EAAKb,cAAc,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACnD,CAAC,EACS,CAAC,cAChBrB,KAAA,CAACN,aAAa,EAAAqB,QAAA,eACVjB,IAAA,CAACF,MAAM,EAAC+B,OAAO,CAAEtB,OAAQ,CAAAU,QAAA,CAAC,QAAM,CAAQ,CAAC,cACzCjB,IAAA,CAACF,MAAM,EAAC+B,OAAO,CAAEhB,UAAW,CAACiB,KAAK,CAAC,SAAS,CAACR,OAAO,CAAC,WAAW,CAAAL,QAAA,CAAC,MAEjE,CAAQ,CAAC,EACE,CAAC,EACZ,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}