{"ast":null,"code":"// src/services/taskService.ts\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\nconst getTasks = async token => {\n  const response = await axios.get(API_URL, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response;\n};\nconst createTask = async (taskData, token) => {\n  const response = await axios.post(API_URL, taskData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response;\n};\nconst updateTask = async (task, token) => {\n  const response = await axios.put(`${API_URL}/${task.id}`, task, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response;\n};\nconst deleteTask = async (taskId, token) => {\n  await axios.delete(`${API_URL}/${taskId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nconst toggleTask = async (taskId, token) => {\n  await axios.patch(`${API_URL}/${taskId}/toggle`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport default {\n  getTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  toggleTask\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getTasks","token","response","get","headers","Authorization","createTask","taskData","post","updateTask","task","put","id","deleteTask","taskId","delete","toggleTask","patch"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/services/taskService.ts"],"sourcesContent":["// src/services/taskService.ts\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\n\nconst getTasks = async (token: string) => {\n    const response = await axios.get(API_URL, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n    return response;\n};\n\nconst createTask = async (taskData: Omit<Task, 'id'>, token: string) => {\n    const response = await axios.post(API_URL, taskData, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n    return response;\n};\n\nconst updateTask = async (task: Task, token: string) => {\n    const response = await axios.put(`${API_URL}/${task.id}`, task, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n    return response;\n};\n\nconst deleteTask = async (taskId: string, token: string) => {\n    await axios.delete(`${API_URL}/${taskId}`, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n};\n\nconst toggleTask = async (taskId: string, token: string) => {\n    await axios.patch(`${API_URL}/${taskId}/toggle`, {}, {\n        headers: { Authorization: `Bearer ${token}` }\n    });\n};\n\nexport default {\n    getTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTask\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,QAAQ;AAExD,MAAMC,QAAQ,GAAG,MAAOC,KAAa,IAAK;EACtC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,EAAE;IACtCQ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOC,QAAQ;AACnB,CAAC;AAED,MAAMI,UAAU,GAAG,MAAAA,CAAOC,QAA0B,EAAEN,KAAa,KAAK;EACpE,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAACZ,OAAO,EAAEW,QAAQ,EAAE;IACjDH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOC,QAAQ;AACnB,CAAC;AAED,MAAMO,UAAU,GAAG,MAAAA,CAAOC,IAAU,EAAET,KAAa,KAAK;EACpD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,IAAIc,IAAI,CAACE,EAAE,EAAE,EAAEF,IAAI,EAAE;IAC5DN,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOC,QAAQ;AACnB,CAAC;AAED,MAAMW,UAAU,GAAG,MAAAA,CAAOC,MAAc,EAAEb,KAAa,KAAK;EACxD,MAAMN,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,IAAIkB,MAAM,EAAE,EAAE;IACvCV,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAChD,CAAC,CAAC;AACN,CAAC;AAED,MAAMe,UAAU,GAAG,MAAAA,CAAOF,MAAc,EAAEb,KAAa,KAAK;EACxD,MAAMN,KAAK,CAACsB,KAAK,CAAC,GAAGrB,OAAO,IAAIkB,MAAM,SAAS,EAAE,CAAC,CAAC,EAAE;IACjDV,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAChD,CAAC,CAAC;AACN,CAAC;AAED,eAAe;EACXD,QAAQ;EACRM,UAAU;EACVG,UAAU;EACVI,UAAU;EACVG;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}