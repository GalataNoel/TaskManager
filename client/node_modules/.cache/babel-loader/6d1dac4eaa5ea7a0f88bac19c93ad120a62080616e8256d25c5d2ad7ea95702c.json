{"ast":null,"code":"// src/services/taskService.ts\nimport{store}from'@store/store';const API_URL=process.env.REACT_APP_API_URL+'/tasks';async function handleResponse(response){if(!response.ok){const error=await response.json();throw new Error(error.message||'Request failed');}return response.json();}export const getTasks=async()=>{const{auth}=store.getState();const response=await fetch(API_URL,{headers:{'Authorization':\"Bearer \".concat(auth.token),'Content-Type':'application/json'}});return handleResponse(response);};export const createTask=async taskData=>{const{auth}=store.getState();const response=await fetch(API_URL,{method:'POST',headers:{'Authorization':\"Bearer \".concat(auth.token),'Content-Type':'application/json'},body:JSON.stringify(taskData)});return handleResponse(response);};export const updateTask=async task=>{const{auth}=store.getState();const response=await fetch(\"\".concat(API_URL,\"/\").concat(task.id),{method:'PUT',headers:{'Authorization':\"Bearer \".concat(auth.token),'Content-Type':'application/json'},body:JSON.stringify(task)});return handleResponse(response);};export const deleteTask=async taskId=>{const{auth}=store.getState();const response=await fetch(\"\".concat(API_URL,\"/\").concat(taskId),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(auth.token)}});await handleResponse(response);};export const toggleTask=async taskId=>{const{auth}=store.getState();const response=await fetch(\"\".concat(API_URL,\"/\").concat(taskId,\"/toggle\"),{method:'PATCH',headers:{'Authorization':\"Bearer \".concat(auth.token)}});await handleResponse(response);};","map":{"version":3,"names":["store","API_URL","process","env","REACT_APP_API_URL","handleResponse","response","ok","error","json","Error","message","getTasks","auth","getState","fetch","headers","concat","token","createTask","taskData","method","body","JSON","stringify","updateTask","task","id","deleteTask","taskId","toggleTask"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/services/taskService.ts"],"sourcesContent":["// src/services/taskService.ts\nimport { Task } from '../types/task';\nimport { store } from '@store/store';\n\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\n\nasync function handleResponse(response: Response) {\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Request failed');\n    }\n    return response.json();\n}\n\nexport const getTasks = async (): Promise<Task[]> => {\n    const { auth } = store.getState();\n    const response = await fetch(API_URL, {\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        }\n    });\n    return handleResponse(response);\n};\n\nexport const createTask = async (taskData: Omit<Task, 'id'>): Promise<Task> => {\n    const { auth } = store.getState();\n    const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n    });\n    return handleResponse(response);\n};\n\nexport const updateTask = async (task: Task): Promise<Task> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${task.id}`, {\n        method: 'PUT',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n    });\n    return handleResponse(response);\n};\n\nexport const deleteTask = async (taskId: string): Promise<void> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`\n        }\n    });\n    await handleResponse(response);\n};\n\nexport const toggleTask = async (taskId: string): Promise<void> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${taskId}/toggle`, {\n        method: 'PATCH',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`\n        }\n    });\n    await handleResponse(response);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}