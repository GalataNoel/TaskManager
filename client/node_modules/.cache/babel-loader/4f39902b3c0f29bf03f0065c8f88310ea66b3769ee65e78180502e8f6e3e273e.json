{"ast":null,"code":"// features/taskSlice.ts\nexport const deleteTask = createAsyncThunk('tasks/delete', async (taskId, {\n  getState\n}) => {\n  const {\n    auth\n  } = getState();\n  await taskService.deleteTask(taskId, auth.token);\n  return taskId;\n});\nexport const toggleTask = createAsyncThunk('tasks/toggle', async (taskId, {\n  getState\n}) => {\n  const {\n    auth\n  } = getState();\n  await taskService.toggleTask(taskId, auth.token);\n  return taskId;\n});\n\n// In your extraReducers:\nextraReducers: builder => {\n  builder\n  // ... other cases\n  .addCase(deleteTask.fulfilled, (state, action) => {\n    state.tasks = state.tasks.filter(task => task.id !== action.payload);\n  }).addCase(toggleTask.fulfilled, (state, action) => {\n    const task = state.tasks.find(t => t.id === action.payload);\n    if (task) {\n      task.completed = !task.completed;\n    }\n  });\n};","map":{"version":3,"names":["deleteTask","createAsyncThunk","taskId","getState","auth","taskService","token","toggleTask","extraReducers","builder","addCase","fulfilled","state","action","tasks","filter","task","id","payload","find","t","completed"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/taskSlice.ts"],"sourcesContent":["// features/taskSlice.ts\nexport const deleteTask = createAsyncThunk(\n    'tasks/delete',\n    async (taskId: string, { getState }) => {\n        const { auth } = getState() as RootState;\n        await taskService.deleteTask(taskId, auth.token!);\n        return taskId;\n    }\n);\n\nexport const toggleTask = createAsyncThunk(\n    'tasks/toggle',\n    async (taskId: string, { getState }) => {\n        const { auth } = getState() as RootState;\n        await taskService.toggleTask(taskId, auth.token!);\n        return taskId;\n    }\n);\n\n// In your extraReducers:\nextraReducers: (builder) => {\n    builder\n        // ... other cases\n        .addCase(deleteTask.fulfilled, (state, action) => {\n            state.tasks = state.tasks.filter(task => task.id !== action.payload);\n        })\n        .addCase(toggleTask.fulfilled, (state, action) => {\n            const task = state.tasks.find(t => t.id === action.payload);\n            if (task) {\n                task.completed = !task.completed;\n            }\n        });\n}"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAGC,gBAAgB,CACtC,cAAc,EACd,OAAOC,MAAc,EAAE;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAGD,QAAQ,CAAC,CAAc;EACxC,MAAME,WAAW,CAACL,UAAU,CAACE,MAAM,EAAEE,IAAI,CAACE,KAAM,CAAC;EACjD,OAAOJ,MAAM;AACjB,CACJ,CAAC;AAED,OAAO,MAAMK,UAAU,GAAGN,gBAAgB,CACtC,cAAc,EACd,OAAOC,MAAc,EAAE;EAAEC;AAAS,CAAC,KAAK;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAGD,QAAQ,CAAC,CAAc;EACxC,MAAME,WAAW,CAACE,UAAU,CAACL,MAAM,EAAEE,IAAI,CAACE,KAAM,CAAC;EACjD,OAAOJ,MAAM;AACjB,CACJ,CAAC;;AAED;AACAM,aAAa,EAAGC,OAAO,IAAK;EACxBA;EACI;EAAA,CACCC,OAAO,CAACV,UAAU,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC9CD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;EACxE,CAAC,CAAC,CACDR,OAAO,CAACH,UAAU,CAACI,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC9C,MAAMG,IAAI,GAAGJ,KAAK,CAACE,KAAK,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IAC3D,IAAIF,IAAI,EAAE;MACNA,IAAI,CAACK,SAAS,GAAG,CAACL,IAAI,CAACK,SAAS;IACpC;EACJ,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}