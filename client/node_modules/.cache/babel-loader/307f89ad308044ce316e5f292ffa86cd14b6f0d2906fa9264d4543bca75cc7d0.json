{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport authService from '../services/authService';\nimport { enqueueSnackbar } from 'notistack';\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoading = false;\n      state.error = null;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nexport const {\n  setCredentials,\n  logout,\n  setLoading,\n  setError\n} = authSlice.actions;\nexport const loginUser = (username, password) => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await authService.login(username, password);\n    dispatch(setCredentials(response));\n    enqueueSnackbar('Login successful', {\n      variant: 'success'\n    });\n  } catch (error) {\n    dispatch(setError(error.message));\n    enqueueSnackbar(error.message, {\n      variant: 'error'\n    });\n  }\n};\nexport const registerUser = (username, password) => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    await authService.register(username, password);\n    enqueueSnackbar('Registration successful', {\n      variant: 'success'\n    });\n  } catch (error) {\n    dispatch(setError(error.message));\n    enqueueSnackbar(error.message, {\n      variant: 'error'\n    });\n  }\n};\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authService","enqueueSnackbar","initialState","user","token","isLoading","error","authSlice","name","reducers","setCredentials","state","action","payload","logout","setLoading","setError","actions","loginUser","username","password","dispatch","response","login","variant","message","registerUser","register","reducer"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch } from '@store/store';\nimport authService from '../services/authService';\nimport { enqueueSnackbar } from 'notistack';\n\ninterface AuthState {\n    user: { id: string; username: string } | null;\n    token: string | null;\n    isLoading: boolean;\n    error: string | null;\n}\n\nconst initialState: AuthState = {\n    user: null,\n    token: null,\n    isLoading: false,\n    error: null,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setCredentials: (state, action: PayloadAction<{ user: { id: string; username: string }; token: string }>) => {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoading = false;\n            state.error = null;\n        },\n        logout: (state) => {\n            state.user = null;\n            state.token = null;\n            state.isLoading = false;\n            state.error = null;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.isLoading = action.payload;\n        },\n        setError: (state, action: PayloadAction<string>) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n    },\n});\n\nexport const { setCredentials, logout, setLoading, setError } = authSlice.actions;\n\nexport const loginUser = (username: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(setLoading(true));\n        const response = await authService.login(username, password);\n        dispatch(setCredentials(response));\n        enqueueSnackbar('Login successful', { variant: 'success' });\n    } catch (error: any) {\n        dispatch(setError(error.message));\n        enqueueSnackbar(error.message, { variant: 'error' });\n    }\n};\n\nexport const registerUser = (username: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(setLoading(true));\n        await authService.register(username, password);\n        enqueueSnackbar('Registration successful', { variant: 'success' });\n    } catch (error: any) {\n        dispatch(setError(error.message));\n        enqueueSnackbar(error.message, { variant: 'error' });\n    }\n};\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,eAAe,QAAQ,WAAW;AAS3C,MAAMC,YAAuB,GAAG;EAC5BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAgF,KAAK;MACzGD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCQ,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;MAClCO,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC;IACDQ,MAAM,EAAGH,KAAK,IAAK;MACfA,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBO,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC;IACDS,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MACnDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MAChDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,cAAc;EAAEI,MAAM;EAAEC,UAAU;EAAEC;AAAS,CAAC,GAAGT,SAAS,CAACU,OAAO;AAEjF,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK,MAAOC,QAAqB,IAAK;EAC9F,IAAI;IACAA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMO,QAAQ,GAAG,MAAMtB,WAAW,CAACuB,KAAK,CAACJ,QAAQ,EAAEC,QAAQ,CAAC;IAC5DC,QAAQ,CAACX,cAAc,CAACY,QAAQ,CAAC,CAAC;IAClCrB,eAAe,CAAC,kBAAkB,EAAE;MAAEuB,OAAO,EAAE;IAAU,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOlB,KAAU,EAAE;IACjBe,QAAQ,CAACL,QAAQ,CAACV,KAAK,CAACmB,OAAO,CAAC,CAAC;IACjCxB,eAAe,CAACK,KAAK,CAACmB,OAAO,EAAE;MAAED,OAAO,EAAE;IAAQ,CAAC,CAAC;EACxD;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACP,QAAgB,EAAEC,QAAgB,KAAK,MAAOC,QAAqB,IAAK;EACjG,IAAI;IACAA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMf,WAAW,CAAC2B,QAAQ,CAACR,QAAQ,EAAEC,QAAQ,CAAC;IAC9CnB,eAAe,CAAC,yBAAyB,EAAE;MAAEuB,OAAO,EAAE;IAAU,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOlB,KAAU,EAAE;IACjBe,QAAQ,CAACL,QAAQ,CAACV,KAAK,CAACmB,OAAO,CAAC,CAAC;IACjCxB,eAAe,CAACK,KAAK,CAACmB,OAAO,EAAE;MAAED,OAAO,EAAE;IAAQ,CAAC,CAAC;EACxD;AACJ,CAAC;AAED,eAAejB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}