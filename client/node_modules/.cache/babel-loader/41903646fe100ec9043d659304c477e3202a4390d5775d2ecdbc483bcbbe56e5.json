{"ast":null,"code":"// src/pages/DashboardPage.tsx\nimport React,{useEffect,useState}from'react';import{useAppSelector,useAppDispatch}from'../store/hooks';import{fetchTasks,createTask,updateTask,deleteTask,toggleTask}from'../features/taskSlice';import{logout}from'../features/authSlice';import{useNavigate}from'react-router-dom';import{Container,Typography,Button,Box,List,ListItem,ListItemText,Checkbox,IconButton,Paper}from'@mui/material';import{Delete,Edit}from'@mui/icons-material';import AddTaskForm from'../components/AddTaskForm';import EditTaskDialog from'../components/EditTaskDialog';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DashboardPage=()=>{const dispatch=useAppDispatch();const{tasks,isLoading}=useAppSelector(state=>state.tasks);const{user}=useAppSelector(state=>state.auth);const navigate=useNavigate();const[editingTask,setEditingTask]=useState(null);const[isEditDialogOpen,setIsEditDialogOpen]=useState(false);useEffect(()=>{dispatch(fetchTasks());},[dispatch]);const handleLogout=()=>{dispatch(logout());navigate('/login');};const handleAddTask=(title,description)=>{dispatch(createTask({title,description,completed:false,userId:(user===null||user===void 0?void 0:user.id)||''}));};const handleEditTask=task=>{setEditingTask(task);setIsEditDialogOpen(true);};const handleUpdateTask=(id,title,description)=>{if(!editingTask)return;dispatch(updateTask({id,title,description,completed:editingTask.completed,userId:editingTask.userId,createdAt:editingTask.createdAt,updatedAt:new Date().toISOString()}));setIsEditDialogOpen(false);};const handleDeleteTask=id=>{if(window.confirm('Are you sure you want to delete this task?')){dispatch(deleteTask(id));}};const handleToggleTask=id=>{dispatch(toggleTask(id));};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsxs(Box,{my:4,display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[\"Welcome, \",user===null||user===void 0?void 0:user.username]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"error\",onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Your Tasks\"}),/*#__PURE__*/_jsx(AddTaskForm,{onAddTask:handleAddTask,isLoading:isLoading}),isLoading&&tasks.length===0?/*#__PURE__*/_jsx(Typography,{children:\"Loading tasks...\"}):/*#__PURE__*/_jsx(List,{component:Paper,children:tasks.map(task=>/*#__PURE__*/_jsxs(ListItem,{divider:true,children:[/*#__PURE__*/_jsx(Checkbox,{edge:\"start\",checked:task.completed||false,onChange:()=>handleToggleTask(task.id)}),/*#__PURE__*/_jsx(ListItemText,{primary:task.title,secondary:task.description,sx:{textDecoration:task.completed?'line-through':'none'}}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>handleEditTask(task),children:/*#__PURE__*/_jsx(Edit,{})}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",onClick:()=>handleDeleteTask(task.id),children:/*#__PURE__*/_jsx(Delete,{})})]},task.id))}),editingTask&&/*#__PURE__*/_jsx(EditTaskDialog,{open:isEditDialogOpen,task:editingTask,onClose:()=>setIsEditDialogOpen(false),onSave:handleUpdateTask})]});};export default DashboardPage;","map":{"version":3,"names":["React","useEffect","useState","useAppSelector","useAppDispatch","fetchTasks","createTask","updateTask","deleteTask","toggleTask","logout","useNavigate","Container","Typography","Button","Box","List","ListItem","ListItemText","Checkbox","IconButton","Paper","Delete","Edit","AddTaskForm","EditTaskDialog","jsxs","_jsxs","jsx","_jsx","DashboardPage","dispatch","tasks","isLoading","state","user","auth","navigate","editingTask","setEditingTask","isEditDialogOpen","setIsEditDialogOpen","handleLogout","handleAddTask","title","description","completed","userId","id","handleEditTask","task","handleUpdateTask","createdAt","updatedAt","Date","toISOString","handleDeleteTask","window","confirm","handleToggleTask","maxWidth","children","my","display","justifyContent","alignItems","variant","username","color","onClick","gutterBottom","onAddTask","length","component","map","divider","edge","checked","onChange","primary","secondary","sx","textDecoration","open","onClose","onSave"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/pages/DashboardPage.tsx"],"sourcesContent":["// src/pages/DashboardPage.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport {\n    fetchTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTask\n} from '../features/taskSlice';\nimport { logout } from '../features/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Container,\n    Typography,\n    Button,\n    Box,\n    List,\n    ListItem,\n    ListItemText,\n    Checkbox,\n    IconButton,\n    Paper\n} from '@mui/material';\nimport { Delete, Edit } from '@mui/icons-material';\nimport AddTaskForm from '../components/AddTaskForm';\nimport EditTaskDialog from '../components/EditTaskDialog';\nimport { Task } from '../types/task';\n\nconst DashboardPage: React.FC = () => {\n    const dispatch = useAppDispatch();\n    const { tasks, isLoading } = useAppSelector((state) => state.tasks);\n    const { user } = useAppSelector((state) => state.auth);\n    const navigate = useNavigate();\n\n    const [editingTask, setEditingTask] = useState<Task | null>(null);\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    const handleLogout = () => {\n        dispatch(logout());\n        navigate('/login');\n    };\n\n    const handleAddTask = (title: string, description: string) => {\n        dispatch(createTask({\n            title,\n            description,\n            completed: false,\n            userId: user?.id || ''\n        }));\n    };\n\n    const handleEditTask = (task: Task) => {\n        setEditingTask(task);\n        setIsEditDialogOpen(true);\n    };\n\n    const handleUpdateTask = (id: string, title: string, description: string) => {\n        if (!editingTask) return;\n\n        dispatch(updateTask({\n            id,\n            title,\n            description,\n            completed: editingTask.completed,\n            userId: editingTask.userId,\n            createdAt: editingTask.createdAt,\n            updatedAt: new Date().toISOString()\n        }));\n        setIsEditDialogOpen(false);\n    };\n\n    const handleDeleteTask = (id: string) => {\n        if (window.confirm('Are you sure you want to delete this task?')) {\n            dispatch(deleteTask(id));\n        }\n    };\n\n    const handleToggleTask = (id: string) => {\n        dispatch(toggleTask(id));\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <Box my={4} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"h4\">\n                    Welcome, {user?.username}\n                </Typography>\n                <Button variant=\"outlined\" color=\"error\" onClick={handleLogout}>\n                    Logout\n                </Button>\n            </Box>\n\n            <Typography variant=\"h5\" gutterBottom>\n                Your Tasks\n            </Typography>\n\n            <AddTaskForm onAddTask={handleAddTask} isLoading={isLoading} />\n\n            {isLoading && tasks.length === 0 ? (\n                <Typography>Loading tasks...</Typography>\n            ) : (\n                <List component={Paper}>\n                    {tasks.map((task) => (\n                        <ListItem key={task.id} divider>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={task.completed || false}\n                                onChange={() => handleToggleTask(task.id)}\n                            />\n                            <ListItemText\n                                primary={task.title}\n                                secondary={task.description}\n                                sx={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n                            />\n                            <IconButton edge=\"end\" onClick={() => handleEditTask(task)}>\n                                <Edit />\n                            </IconButton>\n                            <IconButton edge=\"end\" onClick={() => handleDeleteTask(task.id)}>\n                                <Delete />\n                            </IconButton>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n\n            {editingTask && (\n                <EditTaskDialog\n                    open={isEditDialogOpen}\n                    task={editingTask}\n                    onClose={() => setIsEditDialogOpen(false)}\n                    onSave={handleUpdateTask}\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}