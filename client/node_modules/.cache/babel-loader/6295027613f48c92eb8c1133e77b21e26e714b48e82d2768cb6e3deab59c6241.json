{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport taskService from '../services/taskService';\nimport { enqueueSnackbar } from 'notistack';\nconst initialState = {\n  tasks: [],\n  isLoading: false,\n  error: null\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n      state.isLoading = false;\n      state.error = null;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nexport const {\n  setTasks,\n  addTask,\n  setLoading,\n  setError\n} = taskSlice.actions;\nexport const fetchTasks = () => async (dispatch, getState) => {\n  try {\n    dispatch(setLoading(true));\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not authenticated');\n    const tasks = await taskService.getTasks(token);\n    dispatch(setTasks(tasks));\n  } catch (error) {\n    dispatch(setError(error.message));\n    enqueueSnackbar(error.message, {\n      variant: 'error'\n    });\n  }\n};\nexport const createTask = (title, description) => async (dispatch, getState) => {\n  try {\n    dispatch(setLoading(true));\n    const token = getState().auth.token;\n    if (!token) throw new Error('Not authenticated');\n    const newTask = await taskService.createTask(title, description, token);\n    dispatch(addTask(newTask));\n    enqueueSnackbar('Task created successfully', {\n      variant: 'success'\n    });\n  } catch (error) {\n    dispatch(setError(error.message));\n    enqueueSnackbar(error.message, {\n      variant: 'error'\n    });\n  }\n};\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskService","enqueueSnackbar","initialState","tasks","isLoading","error","taskSlice","name","reducers","setTasks","state","action","payload","addTask","push","setLoading","setError","actions","fetchTasks","dispatch","getState","token","auth","Error","getTasks","message","variant","createTask","title","description","newTask","reducer"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/taskSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch, RootState } from '@store/store';\nimport taskService from '../services/taskService';\nimport { enqueueSnackbar } from 'notistack';\n\ninterface TaskState {\n    tasks: Task[];\n    isLoading: boolean;\n    error: string | null;\n}\n\ninterface Task {\n    id: string;\n    title: string;\n    description: string;\n    userId: string;\n}\n\nconst initialState: TaskState = {\n    tasks: [],\n    isLoading: false,\n    error: null,\n};\n\nconst taskSlice = createSlice({\n    name: 'tasks',\n    initialState,\n    reducers: {\n        setTasks: (state, action: PayloadAction<Task[]>) => {\n            state.tasks = action.payload;\n            state.isLoading = false;\n            state.error = null;\n        },\n        addTask: (state, action: PayloadAction<Task>) => {\n            state.tasks.push(action.payload);\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.isLoading = action.payload;\n        },\n        setError: (state, action: PayloadAction<string>) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n    },\n});\n\nexport const { setTasks, addTask, setLoading, setError } = taskSlice.actions;\n\nexport const fetchTasks = () => async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n        dispatch(setLoading(true));\n        const token = getState().auth.token;\n        if (!token) throw new Error('Not authenticated');\n\n        const tasks = await taskService.getTasks(token);\n        dispatch(setTasks(tasks));\n    } catch (error: any) {\n        dispatch(setError(error.message));\n        enqueueSnackbar(error.message, { variant: 'error' });\n    }\n};\n\nexport const createTask = (title: string, description: string) =>\n    async (dispatch: AppDispatch, getState: () => RootState) => {\n        try {\n            dispatch(setLoading(true));\n            const token = getState().auth.token;\n            if (!token) throw new Error('Not authenticated');\n\n            const newTask = await taskService.createTask(title, description, token);\n            dispatch(addTask(newTask));\n            enqueueSnackbar('Task created successfully', { variant: 'success' });\n        } catch (error: any) {\n            dispatch(setError(error.message));\n            enqueueSnackbar(error.message, { variant: 'error' });\n        }\n    };\n\nexport default taskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAyC,kBAAkB;AAE/E,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,eAAe,QAAQ,WAAW;AAe3C,MAAMC,YAAuB,GAAG;EAC5BC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BQ,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MAChDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC;IACDQ,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAA2B,KAAK;MAC7CD,KAAK,CAACP,KAAK,CAACW,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAA8B,KAAK;MACnDD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IACDI,QAAQ,EAAEA,CAACN,KAAK,EAAEC,MAA6B,KAAK;MAChDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,QAAQ;EAAEI,OAAO;EAAEE,UAAU;EAAEC;AAAS,CAAC,GAAGV,SAAS,CAACW,OAAO;AAE5E,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,OAAOC,QAAqB,EAAEC,QAAyB,KAAK;EACxF,IAAI;IACAD,QAAQ,CAACJ,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMM,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;IACnC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,mBAAmB,CAAC;IAEhD,MAAMpB,KAAK,GAAG,MAAMH,WAAW,CAACwB,QAAQ,CAACH,KAAK,CAAC;IAC/CF,QAAQ,CAACV,QAAQ,CAACN,KAAK,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOE,KAAU,EAAE;IACjBc,QAAQ,CAACH,QAAQ,CAACX,KAAK,CAACoB,OAAO,CAAC,CAAC;IACjCxB,eAAe,CAACI,KAAK,CAACoB,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAQ,CAAC,CAAC;EACxD;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAACC,KAAa,EAAEC,WAAmB,KACzD,OAAOV,QAAqB,EAAEC,QAAyB,KAAK;EACxD,IAAI;IACAD,QAAQ,CAACJ,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAMM,KAAK,GAAGD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAACD,KAAK;IACnC,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,mBAAmB,CAAC;IAEhD,MAAMO,OAAO,GAAG,MAAM9B,WAAW,CAAC2B,UAAU,CAACC,KAAK,EAAEC,WAAW,EAAER,KAAK,CAAC;IACvEF,QAAQ,CAACN,OAAO,CAACiB,OAAO,CAAC,CAAC;IAC1B7B,eAAe,CAAC,2BAA2B,EAAE;MAAEyB,OAAO,EAAE;IAAU,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOrB,KAAU,EAAE;IACjBc,QAAQ,CAACH,QAAQ,CAACX,KAAK,CAACoB,OAAO,CAAC,CAAC;IACjCxB,eAAe,CAACI,KAAK,CAACoB,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAQ,CAAC,CAAC;EACxD;AACJ,CAAC;AAEL,eAAepB,SAAS,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}