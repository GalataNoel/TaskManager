{"ast":null,"code":"// src/features/taskSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getTasks, createTask as createTaskApi, updateTask as updateTaskApi, deleteTask as deleteTaskApi, toggleTask as toggleTaskApi } from '../services/taskService'; // Assuming these functions use fetch or another non-axios method\n\n//import { enqueueSnackbar } from 'notistack';  // Consider how to handle notifications without direct UI dependencies here\n\nconst initialState = {\n  items: [],\n  isLoading: false,\n  error: null\n};\nexport const fetchTasks = createAsyncThunk('tasks/fetchAll', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const tasks = await getTasks();\n    return tasks;\n  } catch (error) {\n    return rejectWithValue(error.message || \"Failed to fetch tasks.\");\n  }\n});\nexport const createTask = createAsyncThunk('tasks/create', async (taskData, {\n  rejectWithValue\n}) => {\n  try {\n    const newTask = await createTaskApi(taskData);\n    return newTask;\n  } catch (error) {\n    return rejectWithValue(error.message || \"Failed to create task.\");\n  }\n});\nexport const updateTask = createAsyncThunk('tasks/update', async (task, {\n  rejectWithValue\n}) => {\n  try {\n    const updatedTask = await updateTaskApi(task);\n    return updatedTask;\n  } catch (error) {\n    return rejectWithValue(error.message || \"Failed to update task.\");\n  }\n});\nexport const deleteTask = createAsyncThunk('tasks/delete', async (taskId, {\n  rejectWithValue\n}) => {\n  try {\n    await deleteTaskApi(taskId);\n    return taskId;\n  } catch (error) {\n    return rejectWithValue(error.message || \"Failed to delete task.\");\n  }\n});\nexport const toggleTask = createAsyncThunk('tasks/toggle', async (taskId, {\n  rejectWithValue\n}) => {\n  try {\n    await toggleTaskApi(taskId);\n    return taskId;\n  } catch (error) {\n    return rejectWithValue(error.message || \"Failed to toggle task.\");\n  }\n});\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    // You can add any synchronous reducers here if needed\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTasks.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchTasks.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = action.payload;\n    }).addCase(fetchTasks.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || action.error.message || \"Failed to fetch tasks.\";\n    }).addCase(createTask.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items.push(action.payload);\n    }).addCase(createTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || action.error.message || \"Failed to create task.\";\n    }).addCase(updateTask.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(updateTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = state.items.map(task => task.id === action.payload.id ? action.payload : task);\n    }).addCase(updateTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || action.error.message || \"Failed to update task.\";\n    }).addCase(deleteTask.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(deleteTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = state.items.filter(task => task.id !== action.payload);\n    }).addCase(deleteTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || action.error.message || \"Failed to delete task.\";\n    }).addCase(toggleTask.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(toggleTask.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = state.items.map(task => task.id === action.payload ? {\n        ...task,\n        completed: !task.completed\n      } : task);\n    }).addCase(toggleTask.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || action.error.message || \"Failed to toggle task.\";\n    });\n  }\n});\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getTasks","createTask","createTaskApi","updateTask","updateTaskApi","deleteTask","deleteTaskApi","toggleTask","toggleTaskApi","initialState","items","isLoading","error","fetchTasks","_","rejectWithValue","tasks","message","taskData","newTask","task","updatedTask","taskId","taskSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","map","id","filter","completed","reducer"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/taskSlice.ts"],"sourcesContent":["// src/features/taskSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport {\n    getTasks,\n    createTask as createTaskApi,\n    updateTask as updateTaskApi,\n    deleteTask as deleteTaskApi,\n    toggleTask as toggleTaskApi\n} from '../services/taskService'; // Assuming these functions use fetch or another non-axios method\nimport { Task } from '../types/task';\n//import { enqueueSnackbar } from 'notistack';  // Consider how to handle notifications without direct UI dependencies here\n\ninterface TaskState {\n    items: Task[];\n    isLoading: boolean;\n    error: string | null;\n}\n\nconst initialState: TaskState = {\n    items: [],\n    isLoading: false,\n    error: null\n};\n\nexport const fetchTasks = createAsyncThunk(\n    'tasks/fetchAll',\n    async (_, { rejectWithValue }) => {\n        try {\n            const tasks = await getTasks();\n            return tasks;\n        } catch (error: any) {\n            return rejectWithValue(error.message || \"Failed to fetch tasks.\");\n        }\n    }\n);\n\nexport const createTask = createAsyncThunk(\n    'tasks/create',\n    async (taskData: Omit<Task, 'id'>, { rejectWithValue }) => {\n        try {\n            const newTask = await createTaskApi(taskData);\n            return newTask;\n        } catch (error: any) {\n            return rejectWithValue(error.message || \"Failed to create task.\");\n        }\n    }\n);\n\nexport const updateTask = createAsyncThunk(\n    'tasks/update',\n    async (task: Task, { rejectWithValue }) => {\n        try {\n            const updatedTask = await updateTaskApi(task);\n            return updatedTask;\n        } catch (error: any) {\n            return rejectWithValue(error.message || \"Failed to update task.\");\n        }\n    }\n);\n\nexport const deleteTask = createAsyncThunk(\n    'tasks/delete',\n    async (taskId: string, { rejectWithValue }) => {\n        try {\n            await deleteTaskApi(taskId);\n            return taskId;\n        } catch (error: any) {\n            return rejectWithValue(error.message || \"Failed to delete task.\");\n        }\n    }\n);\n\nexport const toggleTask = createAsyncThunk(\n    'tasks/toggle',\n    async (taskId: string, { rejectWithValue }) => {\n        try {\n            await toggleTaskApi(taskId);\n            return taskId;\n        } catch (error: any) {\n            return rejectWithValue(error.message || \"Failed to toggle task.\");\n        }\n    }\n);\n\nconst taskSlice = createSlice({\n    name: 'tasks',\n    initialState,\n    reducers: {\n        // You can add any synchronous reducers here if needed\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchTasks.pending, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(fetchTasks.fulfilled, (state, action: PayloadAction<Task[]>) => {\n                state.isLoading = false;\n                state.items = action.payload;\n            })\n            .addCase(fetchTasks.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload as string || action.error.message || \"Failed to fetch tasks.\";\n            })\n            .addCase(createTask.pending, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(createTask.fulfilled, (state, action: PayloadAction<Task>) => {\n                state.isLoading = false;\n                state.items.push(action.payload);\n            })\n            .addCase(createTask.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload as string || action.error.message || \"Failed to create task.\";\n            })\n            .addCase(updateTask.pending, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(updateTask.fulfilled, (state, action: PayloadAction<Task>) => {\n                state.isLoading = false;\n                state.items = state.items.map(task => task.id === action.payload.id ? action.payload : task);\n            })\n            .addCase(updateTask.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload as string || action.error.message || \"Failed to update task.\";\n            })\n            .addCase(deleteTask.pending, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(deleteTask.fulfilled, (state, action: PayloadAction<string>) => {\n                state.isLoading = false;\n                state.items = state.items.filter(task => task.id !== action.payload);\n            })\n            .addCase(deleteTask.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload as string || action.error.message || \"Failed to delete task.\";\n            })\n            .addCase(toggleTask.pending, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(toggleTask.fulfilled, (state, action: PayloadAction<string>) => {\n                state.isLoading = false;\n                state.items = state.items.map(task =>\n                    task.id === action.payload ? { ...task, completed: !task.completed } : task\n                );\n            })\n            .addCase(toggleTask.rejected, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload as string || action.error.message || \"Failed to toggle task.\";\n            });\n    }\n});\n\nexport default taskSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}