{"ast":null,"code":"// src/services/taskService.ts\n\nimport { store } from 'store/store';\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\nasync function handleResponse(response) {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Request failed');\n  }\n  return response.json();\n}\nexport const getTasks = async () => {\n  const {\n    auth\n  } = store.getState();\n  const response = await fetch(API_URL, {\n    headers: {\n      'Authorization': `Bearer ${auth.token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return handleResponse(response);\n};\nexport const createTask = async taskData => {\n  const {\n    auth\n  } = store.getState();\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${auth.token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(taskData)\n  });\n  return handleResponse(response);\n};\nexport const updateTask = async task => {\n  const {\n    auth\n  } = store.getState();\n  const response = await fetch(`${API_URL}/${task.id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${auth.token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  });\n  return handleResponse(response);\n};\nexport const deleteTask = async taskId => {\n  const {\n    auth\n  } = store.getState();\n  const response = await fetch(`${API_URL}/${taskId}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${auth.token}`\n    }\n  });\n  await handleResponse(response);\n};\nexport const toggleTask = async taskId => {\n  const {\n    auth\n  } = store.getState();\n  const response = await fetch(`${API_URL}/${taskId}/toggle`, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': `Bearer ${auth.token}`\n    }\n  });\n  await handleResponse(response);\n};","map":{"version":3,"names":["store","API_URL","process","env","REACT_APP_API_URL","handleResponse","response","ok","error","json","Error","message","getTasks","auth","getState","fetch","headers","token","createTask","taskData","method","body","JSON","stringify","updateTask","task","id","deleteTask","taskId","toggleTask"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/services/taskService.ts"],"sourcesContent":["// src/services/taskService.ts\nimport { Task } from '../types/task';\nimport { store } from 'store/store';\n\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\n\nasync function handleResponse(response: Response) {\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Request failed');\n    }\n    return response.json();\n}\n\nexport const getTasks = async (): Promise<Task[]> => {\n    const { auth } = store.getState();\n    const response = await fetch(API_URL, {\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        }\n    });\n    return handleResponse(response);\n};\n\nexport const createTask = async (taskData: Omit<Task, 'id'>): Promise<Task> => {\n    const { auth } = store.getState();\n    const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n    });\n    return handleResponse(response);\n};\n\nexport const updateTask = async (task: Task): Promise<Task> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${task.id}`, {\n        method: 'PUT',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n    });\n    return handleResponse(response);\n};\n\nexport const deleteTask = async (taskId: string): Promise<void> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`\n        }\n    });\n    await handleResponse(response);\n};\n\nexport const toggleTask = async (taskId: string): Promise<void> => {\n    const { auth } = store.getState();\n    const response = await fetch(`${API_URL}/${taskId}/toggle`, {\n        method: 'PATCH',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`\n        }\n    });\n    await handleResponse(response);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}