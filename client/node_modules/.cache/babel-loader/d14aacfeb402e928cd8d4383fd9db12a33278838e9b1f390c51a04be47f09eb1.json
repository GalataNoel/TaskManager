{"ast":null,"code":"const API_URL='http://localhost:5001/api/auth';export const register=async(username,password)=>{try{const response=await fetch(\"\".concat(API_URL,\"/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(!response.ok){throw new Error(await response.text());}const data=await response.json();return data;}catch(error){console.error('Registration error:',error);throw new Error('Registration failed. Please try again.');}};export const login=async(username,password)=>{try{const response=await fetch(\"\".concat(API_URL,\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(!response.ok){throw new Error(await response.text());}const data=await response.json();if(!data.token||!data.user||!data.user.id||!data.user.username){throw new Error('Invalid response from server');}localStorage.setItem('user',JSON.stringify(data));return data;}catch(error){console.error('Login failed:',error);throw error;}};export const logout=()=>{localStorage.removeItem('user');};const authService={register,login,logout};export default authService;","map":{"version":3,"names":["API_URL","register","username","password","response","fetch","concat","method","headers","body","JSON","stringify","ok","Error","text","data","json","error","console","login","token","user","id","localStorage","setItem","logout","removeItem","authService"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/services/authService.ts"],"sourcesContent":["const API_URL = 'http://localhost:5001/api/auth';\n\ninterface User {\n    id: string;\n    username: string;\n}\n\ninterface AuthResponse {\n    user: User;\n    token: string;\n}\n\nexport const register = async (username: string, password: string): Promise<AuthResponse> => {\n    try {\n        const response = await fetch(`${API_URL}/register`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(await response.text());\n        }\n\n        const data: AuthResponse = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Registration error:', error);\n        throw new Error('Registration failed. Please try again.');\n    }\n};\n\nexport const login = async (username: string, password: string): Promise<AuthResponse> => {\n    try {\n        const response = await fetch(`${API_URL}/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(await response.text());\n        }\n\n        const data: AuthResponse = await response.json();\n\n        if (!data.token || !data.user || !data.user.id || !data.user.username) {\n            throw new Error('Invalid response from server');\n        }\n\n        localStorage.setItem('user', JSON.stringify(data));\n        return data;\n    } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n    }\n};\n\nexport const logout = (): void => {\n    localStorage.removeItem('user');\n};\n\nconst authService = {\n    register,\n    login,\n    logout,\n};\n\nexport default authService;\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,gCAAgC,CAYhD,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAA4B,CACzF,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,OAAO,cAAa,CAChDO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,QAAQ,CAAEC,QAAS,CAAC,CAC/C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAC1C,CAEA,KAAM,CAAAC,IAAkB,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAChD,MAAO,CAAAD,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,IAAI,CAAAJ,KAAK,CAAC,wCAAwC,CAAC,CAC7D,CACJ,CAAC,CAED,MAAO,MAAM,CAAAM,KAAK,CAAG,KAAAA,CAAOjB,QAAgB,CAAEC,QAAgB,GAA4B,CACtF,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,OAAO,WAAU,CAC7CO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAET,QAAQ,CAAEC,QAAS,CAAC,CAC/C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAC1C,CAEA,KAAM,CAAAC,IAAkB,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAEhD,GAAI,CAACD,IAAI,CAACK,KAAK,EAAI,CAACL,IAAI,CAACM,IAAI,EAAI,CAACN,IAAI,CAACM,IAAI,CAACC,EAAE,EAAI,CAACP,IAAI,CAACM,IAAI,CAACnB,QAAQ,CAAE,CACnE,KAAM,IAAI,CAAAW,KAAK,CAAC,8BAA8B,CAAC,CACnD,CAEAU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEd,IAAI,CAACC,SAAS,CAACI,IAAI,CAAC,CAAC,CAClD,MAAO,CAAAA,IAAI,CACf,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED,MAAO,MAAM,CAAAQ,MAAM,CAAGA,CAAA,GAAY,CAC9BF,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC,CACnC,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,CAChB1B,QAAQ,CACRkB,KAAK,CACLM,MACJ,CAAC,CAED,cAAe,CAAAE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}