{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import authService from'../services/authService';import{enqueueSnackbar}from'notistack';const initialState={user:null,token:null,isLoading:false,error:null};const authSlice=createSlice({name:'auth',initialState,reducers:{setCredentials:(state,action)=>{state.user=action.payload.user;state.token=action.payload.token;state.isLoading=false;state.error=null;},logout:state=>{state.user=null;state.token=null;state.isLoading=false;state.error=null;},setLoading:(state,action)=>{state.isLoading=action.payload;},setError:(state,action)=>{state.error=action.payload;state.isLoading=false;}}});export const{setCredentials,logout,setLoading,setError}=authSlice.actions;export const loginUser=(username,password)=>async dispatch=>{try{dispatch(setLoading(true));const response=await authService.login(username,password);dispatch(setCredentials(response));enqueueSnackbar('Login successful',{variant:'success'});}catch(error){dispatch(setError(error.message));enqueueSnackbar(error.message,{variant:'error'});}};export const registerUser=(username,password)=>async dispatch=>{try{dispatch(setLoading(true));await authService.register(username,password);enqueueSnackbar('Registration successful',{variant:'success'});}catch(error){dispatch(setError(error.message));enqueueSnackbar(error.message,{variant:'error'});}};export default authSlice.reducer;","map":{"version":3,"names":["createSlice","authService","enqueueSnackbar","initialState","user","token","isLoading","error","authSlice","name","reducers","setCredentials","state","action","payload","logout","setLoading","setError","actions","loginUser","username","password","dispatch","response","login","variant","message","registerUser","register","reducer"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch } from '@store/store';\nimport authService from '../services/authService';\nimport { enqueueSnackbar } from 'notistack';\n\ninterface AuthState {\n    user: { id: string; username: string } | null;\n    token: string | null;\n    isLoading: boolean;\n    error: string | null;\n}\n\nconst initialState: AuthState = {\n    user: null,\n    token: null,\n    isLoading: false,\n    error: null,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setCredentials: (state, action: PayloadAction<{ user: { id: string; username: string }; token: string }>) => {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isLoading = false;\n            state.error = null;\n        },\n        logout: (state) => {\n            state.user = null;\n            state.token = null;\n            state.isLoading = false;\n            state.error = null;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.isLoading = action.payload;\n        },\n        setError: (state, action: PayloadAction<string>) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n    },\n});\n\nexport const { setCredentials, logout, setLoading, setError } = authSlice.actions;\n\nexport const loginUser = (username: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(setLoading(true));\n        const response = await authService.login(username, password);\n        dispatch(setCredentials(response));\n        enqueueSnackbar('Login successful', { variant: 'success' });\n    } catch (error: any) {\n        dispatch(setError(error.message));\n        enqueueSnackbar(error.message, { variant: 'error' });\n    }\n};\n\nexport const registerUser = (username: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n        dispatch(setLoading(true));\n        await authService.register(username, password);\n        enqueueSnackbar('Registration successful', { variant: 'success' });\n    } catch (error: any) {\n        dispatch(setError(error.message));\n        enqueueSnackbar(error.message, { variant: 'error' });\n    }\n};\n\nexport default authSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAE7D,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,OAASC,eAAe,KAAQ,WAAW,CAS3C,KAAM,CAAAC,YAAuB,CAAG,CAC5BC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACX,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGR,WAAW,CAAC,CAC1BS,IAAI,CAAE,MAAM,CACZN,YAAY,CACZO,QAAQ,CAAE,CACNC,cAAc,CAAEA,CAACC,KAAK,CAAEC,MAAgF,GAAK,CACzGD,KAAK,CAACR,IAAI,CAAGS,MAAM,CAACC,OAAO,CAACV,IAAI,CAChCQ,KAAK,CAACP,KAAK,CAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK,CAClCO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACtB,CAAC,CACDQ,MAAM,CAAGH,KAAK,EAAK,CACfA,KAAK,CAACR,IAAI,CAAG,IAAI,CACjBQ,KAAK,CAACP,KAAK,CAAG,IAAI,CAClBO,KAAK,CAACN,SAAS,CAAG,KAAK,CACvBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACtB,CAAC,CACDS,UAAU,CAAEA,CAACJ,KAAK,CAAEC,MAA8B,GAAK,CACnDD,KAAK,CAACN,SAAS,CAAGO,MAAM,CAACC,OAAO,CACpC,CAAC,CACDG,QAAQ,CAAEA,CAACL,KAAK,CAAEC,MAA6B,GAAK,CAChDD,KAAK,CAACL,KAAK,CAAGM,MAAM,CAACC,OAAO,CAC5BF,KAAK,CAACN,SAAS,CAAG,KAAK,CAC3B,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEK,cAAc,CAAEI,MAAM,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAGT,SAAS,CAACU,OAAO,CAEjF,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAACC,QAAgB,CAAEC,QAAgB,GAAK,KAAO,CAAAC,QAAqB,EAAK,CAC9F,GAAI,CACAA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAtB,WAAW,CAACuB,KAAK,CAACJ,QAAQ,CAAEC,QAAQ,CAAC,CAC5DC,QAAQ,CAACX,cAAc,CAACY,QAAQ,CAAC,CAAC,CAClCrB,eAAe,CAAC,kBAAkB,CAAE,CAAEuB,OAAO,CAAE,SAAU,CAAC,CAAC,CAC/D,CAAE,MAAOlB,KAAU,CAAE,CACjBe,QAAQ,CAACL,QAAQ,CAACV,KAAK,CAACmB,OAAO,CAAC,CAAC,CACjCxB,eAAe,CAACK,KAAK,CAACmB,OAAO,CAAE,CAAED,OAAO,CAAE,OAAQ,CAAC,CAAC,CACxD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGA,CAACP,QAAgB,CAAEC,QAAgB,GAAK,KAAO,CAAAC,QAAqB,EAAK,CACjG,GAAI,CACAA,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAf,WAAW,CAAC2B,QAAQ,CAACR,QAAQ,CAAEC,QAAQ,CAAC,CAC9CnB,eAAe,CAAC,yBAAyB,CAAE,CAAEuB,OAAO,CAAE,SAAU,CAAC,CAAC,CACtE,CAAE,MAAOlB,KAAU,CAAE,CACjBe,QAAQ,CAACL,QAAQ,CAACV,KAAK,CAACmB,OAAO,CAAC,CAAC,CACjCxB,eAAe,CAACK,KAAK,CAACmB,OAAO,CAAE,CAAED,OAAO,CAAE,OAAQ,CAAC,CAAC,CACxD,CACJ,CAAC,CAED,cAAe,CAAAjB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}