{"ast":null,"code":"// src/features/taskSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport taskService from '../services/taskService';\nimport { enqueueSnackbar } from 'notistack';\nconst initialState = {\n  tasks: [],\n  isLoading: false,\n  error: null\n};\n\n// Async Thunks\nexport const fetchTasks = createAsyncThunk('tasks/fetchAll', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      auth\n    } = getState();\n    const response = await taskService.getTasks(auth.token);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch tasks');\n  }\n});\nexport const createTask = createAsyncThunk('tasks/create', async (taskData, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      auth\n    } = getState();\n    const response = await taskService.createTask(taskData, auth.token);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to create task');\n  }\n});\nexport const updateTask = createAsyncThunk('tasks/update', async (task, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      auth\n    } = getState();\n    const response = await taskService.updateTask(task, auth.token);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update task');\n  }\n});\nexport const deleteTask = createAsyncThunk('tasks/delete', async (taskId, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      auth\n    } = getState();\n    await taskService.deleteTask(taskId, auth.token);\n    return taskId;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to delete task');\n  }\n});\nexport const toggleTask = createAsyncThunk('tasks/toggle', async (taskId, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      auth\n    } = getState();\n    await taskService.toggleTask(taskId, auth.token);\n    return taskId;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to toggle task');\n  }\n});\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    // Optional synchronous reducers can go here\n  },\n  extraReducers: builder => {\n    builder\n    // Pending state for all async actions\n    .addMatcher(action => action.type.endsWith('/pending'), state => {\n      state.isLoading = true;\n      state.error = null;\n    })\n\n    // Error state for all async actions\n    .addMatcher(action => action.type.endsWith('/rejected'), (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      enqueueSnackbar(state.error, {\n        variant: 'error'\n      });\n    })\n\n    // Specific success cases\n    .addCase(fetchTasks.fulfilled, (state, action) => {\n      state.tasks = action.payload;\n      state.isLoading = false;\n    }).addCase(createTask.fulfilled, (state, action) => {\n      state.tasks.push(action.payload);\n      state.isLoading = false;\n      enqueueSnackbar('Task created successfully', {\n        variant: 'success'\n      });\n    }).addCase(updateTask.fulfilled, (state, action) => {\n      const index = state.tasks.findIndex(t => t.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n      state.isLoading = false;\n      enqueueSnackbar('Task updated successfully', {\n        variant: 'success'\n      });\n    }).addCase(deleteTask.fulfilled, (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n      state.isLoading = false;\n      enqueueSnackbar('Task deleted successfully', {\n        variant: 'success'\n      });\n    }).addCase(toggleTask.fulfilled, (state, action) => {\n      const task = state.tasks.find(t => t.id === action.payload);\n      if (task) {\n        task.completed = !task.completed;\n      }\n      state.isLoading = false;\n      enqueueSnackbar('Task status updated', {\n        variant: 'success'\n      });\n    });\n  }\n});\n\n// Export actions if you have any synchronous reducers\n// export const { } = taskSlice.actions;\n\n// Export async thunks for components to use\nexport const taskActions = {\n  fetchTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  toggleTask\n};\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","taskService","enqueueSnackbar","initialState","tasks","isLoading","error","fetchTasks","_","getState","rejectWithValue","auth","response","getTasks","token","data","_error$response","_error$response$data","message","createTask","taskData","_error$response2","_error$response2$data","updateTask","task","_error$response3","_error$response3$data","deleteTask","taskId","_error$response4","_error$response4$data","toggleTask","_error$response5","_error$response5$data","taskSlice","name","reducers","extraReducers","builder","addMatcher","action","type","endsWith","state","payload","variant","addCase","fulfilled","push","index","findIndex","t","id","filter","find","completed","taskActions","reducer"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/features/taskSlice.ts"],"sourcesContent":["// src/features/taskSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch, RootState } from '@store/store';\nimport taskService from '../services/taskService';\nimport { enqueueSnackbar } from 'notistack';\n\ninterface Task {\n    id: string;\n    title: string;\n    description: string;\n    completed: boolean;\n    userId: string;\n    createdAt?: string;\n    updatedAt?: string;\n}\n\ninterface TaskState {\n    tasks: Task[];\n    isLoading: boolean;\n    error: string | null;\n}\n\nconst initialState: TaskState = {\n    tasks: [],\n    isLoading: false,\n    error: null\n};\n\n// Async Thunks\nexport const fetchTasks = createAsyncThunk(\n    'tasks/fetchAll',\n    async (_, { getState, rejectWithValue }) => {\n        try {\n            const { auth } = getState() as RootState;\n            const response = await taskService.getTasks(auth.token!);\n            return response.data;\n        } catch (error: any) {\n            return rejectWithValue(error.response?.data?.message || 'Failed to fetch tasks');\n        }\n    }\n);\n\nexport const createTask = createAsyncThunk(\n    'tasks/create',\n    async (taskData: Omit<Task, 'id'>, { getState, rejectWithValue }) => {\n        try {\n            const { auth } = getState() as RootState;\n            const response = await taskService.createTask(taskData, auth.token!);\n            return response.data;\n        } catch (error: any) {\n            return rejectWithValue(error.response?.data?.message || 'Failed to create task');\n        }\n    }\n);\n\nexport const updateTask = createAsyncThunk(\n    'tasks/update',\n    async (task: Task, { getState, rejectWithValue }) => {\n        try {\n            const { auth } = getState() as RootState;\n            const response = await taskService.updateTask(task, auth.token!);\n            return response.data;\n        } catch (error: any) {\n            return rejectWithValue(error.response?.data?.message || 'Failed to update task');\n        }\n    }\n);\n\nexport const deleteTask = createAsyncThunk(\n    'tasks/delete',\n    async (taskId: string, { getState, rejectWithValue }) => {\n        try {\n            const { auth } = getState() as RootState;\n            await taskService.deleteTask(taskId, auth.token!);\n            return taskId;\n        } catch (error: any) {\n            return rejectWithValue(error.response?.data?.message || 'Failed to delete task');\n        }\n    }\n);\n\nexport const toggleTask = createAsyncThunk(\n    'tasks/toggle',\n    async (taskId: string, { getState, rejectWithValue }) => {\n        try {\n            const { auth } = getState() as RootState;\n            await taskService.toggleTask(taskId, auth.token!);\n            return taskId;\n        } catch (error: any) {\n            return rejectWithValue(error.response?.data?.message || 'Failed to toggle task');\n        }\n    }\n);\n\nconst taskSlice = createSlice({\n    name: 'tasks',\n    initialState,\n    reducers: {\n        // Optional synchronous reducers can go here\n    },\n    extraReducers: (builder) => {\n        builder\n            // Pending state for all async actions\n            .addMatcher(\n                (action) => action.type.endsWith('/pending'),\n                (state) => {\n                    state.isLoading = true;\n                    state.error = null;\n                }\n            )\n\n            // Error state for all async actions\n            .addMatcher(\n                (action) => action.type.endsWith('/rejected'),\n                (state, action: PayloadAction<any>) => {\n                    state.isLoading = false;\n                    state.error = action.payload;\n                    enqueueSnackbar(state.error, { variant: 'error' });\n                }\n            )\n\n            // Specific success cases\n            .addCase(fetchTasks.fulfilled, (state, action: PayloadAction<Task[]>) => {\n                state.tasks = action.payload;\n                state.isLoading = false;\n            })\n            .addCase(createTask.fulfilled, (state, action: PayloadAction<Task>) => {\n                state.tasks.push(action.payload);\n                state.isLoading = false;\n                enqueueSnackbar('Task created successfully', { variant: 'success' });\n            })\n            .addCase(updateTask.fulfilled, (state, action: PayloadAction<Task>) => {\n                const index = state.tasks.findIndex(t => t.id === action.payload.id);\n                if (index !== -1) {\n                    state.tasks[index] = action.payload;\n                }\n                state.isLoading = false;\n                enqueueSnackbar('Task updated successfully', { variant: 'success' });\n            })\n            .addCase(deleteTask.fulfilled, (state, action: PayloadAction<string>) => {\n                state.tasks = state.tasks.filter(task => task.id !== action.payload);\n                state.isLoading = false;\n                enqueueSnackbar('Task deleted successfully', { variant: 'success' });\n            })\n            .addCase(toggleTask.fulfilled, (state, action: PayloadAction<string>) => {\n                const task = state.tasks.find(t => t.id === action.payload);\n                if (task) {\n                    task.completed = !task.completed;\n                }\n                state.isLoading = false;\n                enqueueSnackbar('Task status updated', { variant: 'success' });\n            });\n    }\n});\n\n// Export actions if you have any synchronous reducers\n// export const { } = taskSlice.actions;\n\n// Export async thunks for components to use\nexport const taskActions = {\n    fetchTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTask\n};\n\nexport default taskSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}