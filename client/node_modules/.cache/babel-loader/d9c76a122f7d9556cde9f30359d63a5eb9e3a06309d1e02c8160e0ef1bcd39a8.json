{"ast":null,"code":"var _jsxFileName = \"/home/noel/WebstormProjects/TaskManager/client/src/components/EditTaskDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskDialog = ({\n  open,\n  task,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  useEffect(() => {\n    setTitle(task.title);\n    setDescription(task.description);\n  }, [task]);\n  const handleSave = () => {\n    onSave(task.id, title, description);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Title\",\n        type: \"text\",\n        fullWidth: true,\n        variant: \"outlined\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        label: \"Description\",\n        type: \"text\",\n        fullWidth: true,\n        variant: \"outlined\",\n        multiline: true,\n        rows: 4,\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskDialog, \"u2pAH4uhgJdUXUbqts1cIk+yUaM=\");\n_c = EditTaskDialog;\nexport default EditTaskDialog;\nvar _c;\n$RefreshReg$(_c, \"EditTaskDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","jsxDEV","_jsxDEV","EditTaskDialog","open","task","onClose","onSave","_s","title","setTitle","description","setDescription","handleSave","id","fullWidth","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","margin","label","type","variant","value","onChange","e","target","multiline","rows","onClick","color","_c","$RefreshReg$"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/components/EditTaskDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@mui/material';\n\ninterface EditTaskDialogProps {\n    open: boolean;\n    task: { id: string; title: string; description: string };\n    onClose: () => void;\n    onSave: (id: string, title: string, description: string) => void;\n}\n\nconst EditTaskDialog: React.FC<EditTaskDialogProps> = ({ open, task, onClose, onSave }) => {\n    const [title, setTitle] = useState(task.title);\n    const [description, setDescription] = useState(task.description);\n\n    useEffect(() => {\n        setTitle(task.title);\n        setDescription(task.description);\n    }, [task]);\n\n    const handleSave = () => {\n        onSave(task.id, title, description);\n        onClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n            <DialogTitle>Edit Task</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Title\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"outlined\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <TextField\n                    margin=\"dense\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"outlined\"\n                    multiline\n                    rows={4}\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>Cancel</Button>\n                <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default EditTaskDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}