{"ast":null,"code":"var _jsxFileName = \"/home/noel/WebstormProjects/TaskManager/client/src/pages/DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks, createTask, updateTask, deleteTask, toggleTask } from '../features/taskSlice';\nimport { logout } from '../features/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Button, Box, List, ListItem, ListItemText, Checkbox, IconButton, Paper } from '@mui/material';\nimport { Delete, Edit } from '@mui/icons-material';\nimport AddTaskForm from '../components/AddTaskForm';\nimport EditTaskDialog from '../components/EditTaskDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    tasks,\n    isLoading\n  } = useSelector(state => state.tasks);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const navigate = useNavigate();\n  const [editingTask, setEditingTask] = React.useState(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false);\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/login');\n  };\n  const handleAddTask = (title, description) => {\n    dispatch(createTask({\n      title,\n      description,\n      completed: false,\n      userId: (user === null || user === void 0 ? void 0 : user.id) || ''\n    }));\n  };\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setIsEditDialogOpen(true);\n  };\n  const handleUpdateTask = (id, title, description) => {\n    dispatch(updateTask({\n      id,\n      title,\n      description,\n      completed: (editingTask === null || editingTask === void 0 ? void 0 : editingTask.completed) || false,\n      userId: (user === null || user === void 0 ? void 0 : user.id) || ''\n    }));\n    setIsEditDialogOpen(false);\n  };\n\n  // Fixed delete task handler\n  const handleDeleteTask = id => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      dispatch(deleteTask(id));\n    }\n  };\n\n  // Fixed toggle task handler\n  const handleToggleTask = id => {\n    dispatch(toggleTask(id));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"error\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onAddTask: handleAddTask,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), isLoading && tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      component: Paper,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          checked: task.completed || false,\n          onChange: () => handleToggleTask(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: task.title,\n          secondary: task.description,\n          sx: {\n            textDecoration: task.completed ? 'line-through' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          onClick: () => handleEditTask(task),\n          children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          onClick: () => handleDeleteTask(task.id),\n          children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskDialog, {\n      open: isEditDialogOpen,\n      task: editingTask,\n      onClose: () => setIsEditDialogOpen(false),\n      onSave: handleUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"V/gAs+U7G6knjyy4AG8fFKoiJhE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useNavigate];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchTasks","createTask","updateTask","deleteTask","toggleTask","logout","useNavigate","Container","Typography","Button","Box","List","ListItem","ListItemText","Checkbox","IconButton","Paper","Delete","Edit","AddTaskForm","EditTaskDialog","jsxDEV","_jsxDEV","DashboardPage","_s","dispatch","tasks","isLoading","state","user","auth","navigate","editingTask","setEditingTask","useState","isEditDialogOpen","setIsEditDialogOpen","handleLogout","handleAddTask","title","description","completed","userId","id","handleEditTask","task","handleUpdateTask","handleDeleteTask","window","confirm","handleToggleTask","maxWidth","children","my","display","justifyContent","alignItems","variant","username","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","gutterBottom","onAddTask","length","component","map","divider","edge","checked","onChange","primary","secondary","sx","textDecoration","open","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/noel/WebstormProjects/TaskManager/client/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport {\n    fetchTasks,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTask\n} from '../features/taskSlice';\nimport { logout } from '../features/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Container,\n    Typography,\n    Button,\n    Box,\n    List,\n    ListItem,\n    ListItemText,\n    Checkbox,\n    IconButton,\n    Paper\n} from '@mui/material';\nimport { Delete, Edit } from '@mui/icons-material';\nimport AddTaskForm from '../components/AddTaskForm';\nimport EditTaskDialog from '../components/EditTaskDialog';\n\nconst DashboardPage: React.FC = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const { tasks, isLoading } = useSelector((state: RootState) => state.tasks);\n    const { user } = useSelector((state: RootState) => state.auth);\n    const navigate = useNavigate();\n\n    const [editingTask, setEditingTask] = React.useState<Task | null>(null);\n    const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false);\n\n    useEffect(() => {\n        dispatch(fetchTasks());\n    }, [dispatch]);\n\n    const handleLogout = () => {\n        dispatch(logout());\n        navigate('/login');\n    };\n\n    const handleAddTask = (title: string, description: string) => {\n        dispatch(createTask({\n            title,\n            description,\n            completed: false,\n            userId: user?.id || ''\n        }));\n    };\n\n    const handleEditTask = (task: Task) => {\n        setEditingTask(task);\n        setIsEditDialogOpen(true);\n    };\n\n    const handleUpdateTask = (id: string, title: string, description: string) => {\n        dispatch(updateTask({\n            id,\n            title,\n            description,\n            completed: editingTask?.completed || false,\n            userId: user?.id || ''\n        }));\n        setIsEditDialogOpen(false);\n    };\n\n    // Fixed delete task handler\n    const handleDeleteTask = (id: string) => {\n        if (window.confirm('Are you sure you want to delete this task?')) {\n            dispatch(deleteTask(id));\n        }\n    };\n\n    // Fixed toggle task handler\n    const handleToggleTask = (id: string) => {\n        dispatch(toggleTask(id));\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <Box my={4} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"h4\">\n                    Welcome, {user?.username}\n                </Typography>\n                <Button variant=\"outlined\" color=\"error\" onClick={handleLogout}>\n                    Logout\n                </Button>\n            </Box>\n\n            <Typography variant=\"h5\" gutterBottom>\n                Your Tasks\n            </Typography>\n\n            <AddTaskForm onAddTask={handleAddTask} isLoading={isLoading} />\n\n            {isLoading && tasks.length === 0 ? (\n                <Typography>Loading tasks...</Typography>\n            ) : (\n                <List component={Paper}>\n                    {tasks.map((task) => (\n                        <ListItem key={task.id} divider>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={task.completed || false}\n                                onChange={() => handleToggleTask(task.id)}\n                            />\n                            <ListItemText\n                                primary={task.title}\n                                secondary={task.description}\n                                sx={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n                            />\n                            <IconButton edge=\"end\" onClick={() => handleEditTask(task)}>\n                                <Edit />\n                            </IconButton>\n                            <IconButton edge=\"end\" onClick={() => handleDeleteTask(task.id)}>\n                                <Delete />\n                            </IconButton>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n\n            {editingTask && (\n                <EditTaskDialog\n                    open={isEditDialogOpen}\n                    task={editingTask}\n                    onClose={() => setIsEditDialogOpen(false)}\n                    onSave={handleUpdateTask}\n                />\n            )}\n        </Container>\n    );\n};\n\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}